name: libssl

on:
  push:
    branches:
      - main

    paths:
      - 'libssl/**'
      - .github/workflows/libssl.yml

env:
  OPENSSL_VERSION: "3.2.1"
  OPENSSL_SHA256SUM: "83c7329fe52c850677d75e5d0b0ca245309b97e8ecbcfdc1dfdc4ab9fac35b39"
  REGISTRY_URL: ghcr.io/${{ github.repository }}

concurrency:
  group: "build"
  cancel-in-progress: false


jobs:
  base:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lowercase registry url
        run: echo "REGISTRY_URL=${REGISTRY_URL,,}" >> ${GITHUB_ENV}
        env:
          REGISTRY_URL: ${{ env.REGISTRY_URL }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build libssl base
        uses: docker/bake-action@v4
        with:
          push: true
          workdir: libssl
          targets: base
          set: |
            *.args.OPENSSL_VERSION=${{ env.OPENSSL_VERSION }}
            *.args.OPENSSL_HASH=${{ env.OPENSSL_SHA256SUM }}
            *.tags=${{ env.REGISTRY_URL }}:libssl-base-${{ env.OPENSSL_VERSION }}

  build:
    runs-on: ubuntu-latest
    needs: base

    strategy:
      matrix:
        target:
          - linux-x86_64
          - linux-x86
          - mingw64
          - mingw

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lowercase registry url
        run: echo "REGISTRY_URL=${REGISTRY_URL,,}" >> ${GITHUB_ENV}
        env:
          REGISTRY_URL: ${{ env.REGISTRY_URL }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Pull base image
        run: docker pull ${{ env.REGISTRY_URL }}:libssl-base-${{ env.OPENSSL_VERSION }}

      - name: Build libssl
        uses: docker/bake-action@v4
        with:
          push: false
          workdir: libssl
          targets: ${{ matrix.target }}
          set: |
            base.args.OPENSSL_VERSION=${{ env.OPENSSL_VERSION }}
            base.args.OPENSSL_HASH=${{ env.OPENSSL_SHA256SUM }}
            base.tags=${{ env.REGISTRY_URL }}:libssl-base-${{ env.OPENSSL_VERSION }}

      - name: Upload libssl tarball
        uses: actions/upload-artifact@v4
        with:
          name: libssl-${{ matrix.target }}.tar.gz
          path: libssl/libssl-${{ matrix.target }}.tar.gz


  release:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create dist directory
        run: mkdir -p dist

      - name: Download linux-x86_64 build
        uses: actions/download-artifact@v4
        with:
          name: libssl-linux-x86_64.tar.gz
          path: dist

      - name: Download linux-x86 build
        uses: actions/download-artifact@v4
        with:
          name: libssl-linux-x86.tar.gz
          path: dist

      - name: Download mingw64 build
        uses: actions/download-artifact@v4
        with:
          name: libssl-mingw64.tar.gz
          path: dist

      - name: Download mingw build
        uses: actions/download-artifact@v4
        with:
          name: libssl-mingw64.tar.gz
          path: dist

      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release create libssl-${{ env.OPENSSL_VERSION }} -R ${{ github.repository }} -t openssl-${{ env.openssl-version }} dist/*.tar.gz
